---
kind: pipeline
name: default

platform:
  arch: "amd64"

trigger:
  branch:
    - main

volumes:
  - name: shared
    temp: {}

steps:
  # - name: publish
  #   image: plugins/kaniko-ecr
  #   settings:
  #     create_repository: true
  #     registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
  #     repo: devprod-evergreen/${DRONE_REPO_NAME}
  #     tags:
  #       - git-${DRONE_COMMIT_SHA:0:7}
  #       - latest
  #     access_key:
  #       from_secret: ecr_access_key
  #     secret_key:
  #       from_secret: ecr_secret_key
  #   when:
  #     event:
  #       - promote
  #       - push

  - name: generate-email-staging
    image: bitnami/kubectl
    commands:
      - apt-get update && apt-get install -y git && rm -rf /var/lib/apt/lists/*
      - git --version
      # Drone is running in a container, so we need to add the source directory to the safe.directory list
      - kubectl version --client
      - kubectl config set-cluster staging --server="$KUBE_API_SERVER" --insecure-skip-tls-verify=true
      - kubectl config set-credentials staging --token="$KUBE_TOKEN"
      - kubectl config set-context staging --cluster=staging --user=staging --namespace=devprod-evergreen
      - kubectl config use-context staging
      - |
        PREV_COMMIT=$(kubectl get pods --selector=release=sage -n devprod-evergreen \
          -o jsonpath='{.items[*].metadata.labels}' 2>/dev/null | cut -d'}' -f1 | \
          grep -oE 'git-[0-9a-fA-F]+' | cut -d- -f2 | head -n1)
        if [ -n "$PREV_COMMIT" ]; then
          ./scripts/generate_deploy_email.sh "$PREV_COMMIT"
          cp temp/deploy_email.html /shared/deploy_email.html
        else
          echo "No previous commit found"
        fi
    environment:
      KUBE_API_SERVER: https://api.staging.corp.mongodb.com
      KUBE_TOKEN:
        from_secret: staging_kubernetes_token
    volumes:
      - name: shared
        path: /shared
    when:
      event:
        - promote
      target:
        - staging

  # - name: deploy-staging
  #   image: public.ecr.aws/kanopy/drone-helm:v3
  #   settings:
  #     chart: mongodb/web-app
  #     chart_version: 4.31.0
  #     add_repos: [mongodb=https://10gen.github.io/helm-charts]
  #     namespace: devprod-evergreen
  #     release: sage
  #     values: image.tag=git-${DRONE_COMMIT_SHA:0:7},image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/devprod-evergreen/${DRONE_REPO_NAME},ingress.enabled=true,ingress.hosts[0]=sage.devprod-evergreen.staging.corp.mongodb.com
  #     values_files: [ "environments/staging.yaml" ]
  #     api_server: https://api.staging.corp.mongodb.com
  #     kubernetes_token:
  #       from_secret: staging_kubernetes_token
  #     wait_for_upgrade: true
  #   volumes:
  #     - name: shared
  #       path: /shared
  #   when:
  #     event:
  #       - promote
  #     target:
  #       - staging

  - name: send-email-staging-api # New step for API call
    image: alpine/curl:latest # Lightweight image with cURL
    commands:
      # Read the HTML content, escape it for JSON, and store in a shell variable.
      - EMAIL_BODY=$(cat /shared/deploy_email.html | tr -d '\n' | sed 's/"/\\"/g')
      # Construct the full JSON payload with the escaped body.
      - JSON_PAYLOAD="{\"recipients\": [\"mohamed.khelif@mongodb.com\"], \"subject\": \"Staging Deployment Notification\", \"body\": \"$EMAIL_BODY\", \"is_plain_text\": false}"
      # Send the POST request to the notification API.
      - |
        curl -X POST \
          'https://evergreen.mongodb.com/rest/v2/notifications/email' \
          -H "Api-User: $API_USER" \
          -H "Api-Key: $API_KEY" \
          -H 'Content-Type: application/json' \
          --data "$JSON_PAYLOAD"
    environment:
      API_USER:
        from_secret: evergreen_api_user # Assuming this secret exists
      API_KEY:
        from_secret: evergreen_api_key # Assuming this secret exists
    volumes:
      - name: shared
        path: /shared
    when:
      event:
        - promote
      target:
        - staging



  - name: generate-email-prod
    image: bitnami/kubectl:latest
    commands:
      - kubectl config set-cluster prod --server="$KUBE_API_SERVER" --insecure-skip-tls-verify=true
      - kubectl config set-credentials prod --token="$KUBE_TOKEN"
      - kubectl config set-context prod --cluster=prod --user=prod --namespace=devprod-evergreen
      - kubectl config use-context prod
      - apk add --no-cache git
      - PREV_COMMIT=$(kubectl get pods --selector=release=sage -n devprod-evergreen -o jsonpath='{.items[*].metadata.labels}' 2>/dev/null | cut -d'}' -f1 | grep -oE 'git-[0-9a-fA-F]+' | cut -d- -f2 | head -n1)
      - if [ -n "$PREV_COMMIT" ]; then ./scripts/generate_deploy_email.sh $PREV_COMMIT; cp temp/deploy_email.html /shared/deploy_email.html; else echo "No previous commit found"; fi
    environment:
      KUBE_API_SERVER: https://api.prod.corp.mongodb.com
      KUBE_TOKEN:
        from_secret: prod_kubernetes_token
    volumes:
      - name: shared
        path: /shared
    when:
      branch:
        - main
      event:
        - promote
      target:
        - production

  - name: deploy-prod
    image: public.ecr.aws/kanopy/drone-helm:v3
    settings:
      chart: mongodb/web-app
      chart_version: 4.31.0
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: devprod-evergreen
      release: sage
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7},image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/devprod-evergreen/${DRONE_REPO_NAME},ingress.enabled=true,ingress.hosts[0]=sage.devprod-evergreen.prod.corp.mongodb.com
      values_files: [ "environments/prod.yaml" ]
      api_server: https://api.prod.corp.mongodb.com
      kubernetes_token:
        from_secret: prod_kubernetes_token
      wait_for_upgrade: true
    volumes:
      - name: shared
        path: /shared
    when:
      branch:
        - main
      event:
        - promote
      target:
        - production
