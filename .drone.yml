---
kind: pipeline
name: default

platform:
  arch: "amd64"

trigger:
  branch:
    - main

volumes:
  - name: cache
    temp: {}

steps:
  - name: publish
    image: plugins/kaniko-ecr
    settings:
      create_repository: true
      registry: 795250896452.dkr.ecr.us-east-1.amazonaws.com
      repo: devprod-evergreen/${DRONE_REPO_NAME}
      tags:
        - git-${DRONE_COMMIT_SHA:0:7}
        - latest
      access_key:
        from_secret: ecr_access_key
      secret_key:
        from_secret: ecr_secret_key
    when:
      event:
        - promote
        - push

  - name: fetch-pre-deploy-version
    image: bitnami/kubectl:latest
    volumes:
      - name: cache
        path: /cache
    environment:
      KUBERNETES_TOKEN:
        from_secret: staging_kubernetes_token
    commands:
      - kubectl config set-cluster staging --server=https://api.staging.corp.mongodb.com --insecure-skip-tls-verify=true
      - kubectl config set-credentials staging --token="$KUBERNETES_TOKEN"
      - kubectl config set-context api.staging.corp.mongodb.com --cluster=staging --user=staging --namespace=devprod-evergreen
      - kubectl config use-context api.staging.corp.mongodb.com
      - |
        if kubectl get deployment sage -n devprod-evergreen >/dev/null 2>&1; then
          CURRENT_IMAGE=$(kubectl get deployment sage -n devprod-evergreen -o jsonpath='{.spec.template.spec.containers[0].image}')
          echo "Current deployed image - $CURRENT_IMAGE"
          SHORT_SHA=$(echo "$CURRENT_IMAGE" | sed -n 's/.*git-\([a-f0-9]\{7\}\).*/\1/p')
          echo "Extracted short SHA - $SHORT_SHA"
          echo "$SHORT_SHA" > /cache/previous_version.txt
        else
          echo "No existing deployment found - this is the first deployment"
          echo "none" > /cache/previous_version.txt
        fi
      - cat /cache/previous_version.txt
    when:
      event:
        - promote
      target:
        - staging

  - name: deploy-staging
    image: public.ecr.aws/kanopy/drone-helm:v3
    settings:
      chart: mongodb/web-app
      chart_version: 4.31.0
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: devprod-evergreen
      release: sage
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7},image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/devprod-evergreen/${DRONE_REPO_NAME},ingress.enabled=true,ingress.hosts[0]=sage.devprod-evergreen.staging.corp.mongodb.com
      values_files: [ "environments/staging.yaml" ]
      api_server: https://api.staging.corp.mongodb.com
      kubernetes_token:
        from_secret: staging_kubernetes_token
      wait_for_upgrade: true
    when:
      event:
        - promote
      target:
        - staging

  - name: deploy-prod
    image: public.ecr.aws/kanopy/drone-helm:v3
    settings:
      chart: mongodb/web-app
      chart_version: 4.31.0
      add_repos: [mongodb=https://10gen.github.io/helm-charts]
      namespace: devprod-evergreen
      release: sage
      values: image.tag=git-${DRONE_COMMIT_SHA:0:7},image.repository=795250896452.dkr.ecr.us-east-1.amazonaws.com/devprod-evergreen/${DRONE_REPO_NAME},ingress.enabled=true,ingress.hosts[0]=sage.devprod-evergreen.prod.corp.mongodb.com
      values_files: [ "environments/prod.yaml" ]
      api_server: https://api.prod.corp.mongodb.com
      kubernetes_token:
        from_secret: prod_kubernetes_token
      wait_for_upgrade: true
    when:
      branch:
        - main
      event:
        - promote
      target:
        - production

  - name: log-deployment-commits
    image: alpine/git
    depends_on:
      - deploy-staging
    volumes:
      - name: cache
        path: /cache
    commands:
      - apk add --no-cache bash git
      - PREVIOUS_VERSION=$(cat /cache/previous_version.txt)
      - echo "Previous deployed version - $PREVIOUS_VERSION"
      - echo "Current version - ${DRONE_COMMIT_SHA:0:7}"
      - chmod +x scripts/fetch_deployment_commits.sh
      - ./scripts/fetch_deployment_commits.sh "$PREVIOUS_VERSION"
    when:
      event:
        - promote
      target:
        - staging
      status:
        - success
