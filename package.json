{
  "name": "sage",
  "version": "1.0.0",
  "description": "evergreen-ai-service",
  "main": "dist/main.js",
  "scripts": {
    "build": "tsc && tsc-alias",
    "start": "NODE_ENV=production node dist/main.js",
    "dev": "NODE_ENV=development ts-node-dev -r tsconfig-paths/register --respawn --transpile-only src/main.ts",
    "dev:staging": "DEPLOYMENT_ENV=staging yarn dev",
    "dev:prod": "DEPLOYMENT_ENV=production yarn dev",
    "deploy:staging": "dotenv -- sh scripts/deploy.sh",
    "clean": "rm -rf dist bin node_modules",
    "codegen": "graphql-codegen-esm --config graphql.config.ts",
    "e2e": "vitest --project e2e",
    "test": "vitest --project unit",
    "test:ui": "yarn test --ui",
    "test:run": "yarn test run",
    "test:coverage": "yarn test --coverage",
    "eslint:fix": "yarn eslint:strict --fix",
    "eslint:staged": "STRICT=1 eslint",
    "eslint:strict": "STRICT=1 eslint .",
    "format": "prettier --write src/**/*.ts",
    "format:check": "prettier --check src/**/*.ts",
    "run-analyzer": "ts-node -r tsconfig-paths/register src/mastra/tests/scripts/run-log-analyzer.ts",
    "test-thinking-agent": "ts-node --transpile-only -r tsconfig-paths/register src/mastra/tests/scripts/test-thinking-agent.ts",
    "chat-with-staging": "ts-node --transpile-only -r tsconfig-paths/register src/mastra/tests/scripts/chat-with-staging.ts",
    "mastra:dev": "mastra dev -p 4111",
    "mastra:build": "mastra build",
    "mastra:start": "node --import=./.mastra/output/instrumentation.mjs .mastra/output/index.mjs",
    "mastra:full": "yarn mastra:build && yarn mastra:start",
    "eval": "npx braintrust eval --no-send-logs src/evals/",
    "eval:send_to_braintrust": "npx braintrust eval src/evals/"
  },
  "dependencies": {
    "@ai-sdk/azure": "^2.0.10",
    "@ai-sdk/openai": "^2.0.10",
    "@ai-sdk/provider": "^2.0.0",
    "@mastra/core": "^0.14.1",
    "@mastra/libsql": "^0.13.4",
    "@mastra/loggers": "^0.10.7",
    "@mastra/memory": "^0.13.1",
    "@mastra/mongodb": "^0.13.3",
    "@mastra/rag": "^1.1.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.62.0",
    "@opentelemetry/core": "^2.0.1",
    "@opentelemetry/exporter-trace-otlp-http": "^0.203.0",
    "@opentelemetry/sdk-node": "^0.203.0",
    "@opentelemetry/sdk-trace-base": "^2.0.1",
    "@sentry/node": "^10.5.0",
    "@sentry/profiling-node": "^10.5.0",
    "ai": "^5.0.15",
    "braintrust": "^0.2.5",
    "cors": "^2.8.5",
    "dotenv-cli": "^10.0.0",
    "dotenv-flow": "^4.1.0",
    "express": "^4.18.2",
    "express-list-endpoints": "^7.1.1",
    "express-winston": "^4.2.0",
    "gpt-tokenizer": "^3.0.1",
    "gql": "^1.1.2",
    "graphql": "^16.11.0",
    "graphql-tag": "^2.12.6",
    "mongodb": "^6.18.0",
    "query-string": "^9.2.2",
    "uuid": "^11.1.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@eslint/compat": "^1.3.1",
    "@eslint/js": "^9.30.1",
    "@graphql-codegen/cli": "^5.0.7",
    "@types/cors": "^2.8.19",
    "@types/express": "^4.17.17",
    "@types/express-winston": "^4.0.2",
    "@types/node": "^20.5.0",
    "@types/supertest": "^6.0.3",
    "@types/uuid": "^10.0.0",
    "@types/winston": "^2.4.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "autoevals": "^0.0.131",
    "eslint": "^9.30.1",
    "eslint-config-prettier": "^10.1.5",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsdoc": "^51.3.4",
    "eslint-plugin-prettier": "^5.5.1",
    "eslint-plugin-sort-destructure-keys": "^2.0.0",
    "globals": "^16.3.0",
    "junit-report-builder": "^5.1.1",
    "mastra": "^0.10.23",
    "nodemon": "^3.0.1",
    "prettier": "^3.6.2",
    "supertest": "^7.1.4",
    "ts-node-dev": "^2.0.0",
    "tsc-alias": "^1.8.16",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.6",
    "typescript-eslint": "^8.38.0",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=22.0.0"
  },
  "keywords": [
    "express",
    "server",
    "evergreen",
    "ai-service",
    "typescript"
  ],
  "author": "",
  "license": "ISC"
}
